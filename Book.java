package com.example.bwa.user;

import lombok.*;

import javax.persistence.*;
import java.util.List;

@NoArgsConstructor
@AllArgsConstructor
@Getter
@Setter
@ToString
@EqualsAndHashCode
@Entity
@Table
public class Book {
    @Id
    @SequenceGenerator(
            name = "book_sequence",
            sequenceName = "book_sequence",
            allocationSize = 1
    )
    @GeneratedValue(
            strategy = GenerationType.SEQUENCE,
            generator = "book_sequence"
    )
    @Column(nullable = false, updatable = false) //WE DON'T SEND id AT POST REQUEST: id - GENERATED BY @GeneratedValue
    private Long bookId;
    private String name;
    private String author;
    private String content;
    private Boolean isRead;
    @ManyToOne
    @JoinColumn(name = "userId", referencedColumnName = "bookId")
    private User user;
    @ManyToOne
    @JoinColumn(name = "wId", referencedColumnName = "bookId")
    private Wishlist wishlist;
    @OneToMany(mappedBy = "book", cascade = CascadeType.ALL)
    private List<Review> reviews;

    @ManyToOne
    @JoinColumn(name = "fId", referencedColumnName = "bookId")
    private Favourite favourite;

    public Integer getReviewCalculated(){
        int n = 0;
        int sum = 0;
        for(Review r: this.reviews){
            n++;
            sum += r.getRating();
        }
        return (n != 0) ? (sum/n) : 0;
    }
}
